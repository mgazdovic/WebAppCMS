@model IEnumerable<Order>

@{
    ViewData["Title"] = "Order";
}

<h1>Order Administration</h1>

<hr />

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<hr />

<div class="row">
    <div class="col-md-2">
        <div class="dropdown">
            <button class="btn btn-info dropdown-toggle w-100" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Per Page
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage=5>5</a>
                <a class="dropdown-item" asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage=10>10</a>
                <a class="dropdown-item" asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage=25>25</a>
                <a class="dropdown-item" asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage=50>50</a>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <form asp-action="Index" asp-route-filter=filter method="get">
            <div class="input-group">
                <div class="form-outline">
                    <input type="search" name="filter" class="form-control" value="@ViewBag.filter" />
                </div>
                <input type="submit" class="btn btn-outline-secondary ml-1" value="Search">
                @if (ViewBag.filter != null || ViewBag.totalPageCount > 1)
                {
                    <a asp-action="Index" class="btn btn-outline-success ml-1">Show All</a>
                }
                <span class="text-muted small ml-2">Currently showing @Model.Count() out of @ViewBag.totalCount total records</span>
            </div>
        </form>
    </div>
</div>

<hr />

@if (Model.Count() == 0)
{
    <div class="row text-muted"> --- No records found...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th class="align-middle">
                    Total
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.UserName)
                </th>

                <th></th>

                <th class="align-middle small text-muted">
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>
                <th class="align-middle small text-muted">
                    @Html.DisplayNameFor(model => model.ModifiedAt)
                </th>
                <th class="align-middle small text-muted">
                    @Html.DisplayNameFor(model => model.ModifiedBy)
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @item.GetTotal().ToString("0.00")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Product Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>

                    <td class="small text-muted align-middle">
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td class="small text-muted align-middle">
                        @Html.DisplayFor(modelItem => item.ModifiedAt)
                    </td>
                    <td class="small text-muted align-middle">
                        @Html.DisplayFor(modelItem => item.ModifiedBy.UserName)
                    </td>

                </tr>
            }
            <tr>
                <td colspan="8" class="text-muted">Page @ViewBag.page / @ViewBag.totalPageCount</td>
            </tr>
            <tr>
                <td colspan="8">
                    @if (ViewBag.page > 1)
                    {
                        <a asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage="@ViewBag.perPage" asp-route-page="@(ViewBag.page - 1)">Previous Page</a>
                        <span> | </span>
                    }
                    @if (ViewBag.page < ViewBag.totalPageCount)
                    {
                        <a asp-action="Index" asp-route-filter="@ViewBag.filter" asp-route-perPage="@ViewBag.perPage" asp-route-page="@(ViewBag.page + 1)">Next Page</a>
                    }
                </td>
            </tr>
        </tbody>
    </table>
}

<hr />
<hr />
<p>
    <a asp-controller="Home" asp-action="Index">Back to Administration</a>
</p>
